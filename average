fn gen_shipments(mut shipments: Vec<u32>) -> Vec<u32> {
    let total: u32 = shipments.iter().sum();
    let average = total as i32 / shipments.len() as i32;

    let mut adjustments: Vec<i32> = shipments.iter().map(|&x| x as i32 - average).collect();

    // Перевіримо, чи загальний залишок не більше нуля (щоб врівноважити).
    let excess: i32 = adjustments.iter().sum();

    for i in 0..adjustments.len() {
        if excess == 0 {
            break;
        }
        if excess > 0 && adjustments[i] > 0 {
            adjustments[i] -= 1;
        } else if excess < 0 && adjustments[i] < 0 {
            adjustments[i] += 1;
        }
    }

    // Перетворимо значення назад в Vec<u32>
    let result: Vec<u32> = adjustments.iter().map(|&x| (x + average) as u32).collect();
    result
}

fn main() {
    let shipments = vec![8, 2, 2, 4, 4];
    let result = gen_shipments(shipments);
    println!("{:?}", result);
}
